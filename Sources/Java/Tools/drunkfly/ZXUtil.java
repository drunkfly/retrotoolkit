package drunkfly;

public final class ZXUtil
{
    public static final int FirstUDG = 0x90;
    public static final int LastUDG = 0xA2; // 0xA3 and 0xA4 are reserved on 128K

    public static int chooseGraphic(byte[] pixels)
    {
        if (Bytes.isZero(pixels))
            return 0x20;    // ' '
        if (Bytes.equals(pixels, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff))
            return 0x5f;    // '_'
        if (Bytes.equals(pixels, 0x0f, 0x0f, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00))
            return 0x81;
        if (Bytes.equals(pixels, 0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00))
            return 0x82;
        if (Bytes.equals(pixels, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00))
            return 0x83;
        if (Bytes.equals(pixels, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x0f))
            return 0x84;
        if (Bytes.equals(pixels, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f))
            return 0x85;
        if (Bytes.equals(pixels, 0xf0, 0xf0, 0xf0, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f))
            return 0x86;
        if (Bytes.equals(pixels, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x0f, 0x0f))
            return 0x87;
        if (Bytes.equals(pixels, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xf0, 0xf0))
            return 0x88;
        if (Bytes.equals(pixels, 0x0f, 0x0f, 0x0f, 0x0f, 0xf0, 0xf0, 0xf0, 0xf0))
            return 0x89;
        if (Bytes.equals(pixels, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0))
            return 0x8a;
        if (Bytes.equals(pixels, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0xf0, 0xf0))
            return 0x8b;
        if (Bytes.equals(pixels, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff))
            return 0x8c;
        if (Bytes.equals(pixels, 0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff))
            return 0x8d;
        if (Bytes.equals(pixels, 0xf0, 0xf0, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xff))
            return 0x8e;
        if (Bytes.equals(pixels, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff))
            return 0x8f;
        return -1;
    }
}
